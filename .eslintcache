[{"C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\index.js":"1","C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\reportWebVitals.js":"2","C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\App.js":"3","C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\pages\\Dashboard.js":"4","C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\context\\context.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":170,"mtime":1611855294948,"results":"9","hashOfConfig":"7"},{"size":822,"mtime":1611855317793,"results":"10","hashOfConfig":"7"},{"size":2210,"mtime":1611855067426,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2yiwid",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\index.js",[],"C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\reportWebVitals.js",[],"C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\App.js",[],"C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\pages\\Dashboard.js",[],"C:\\Users\\shahn\\Desktop\\Portfolio-Projects\\GitHub-User-Search\\app\\src\\context\\context.js",["23"],"import React, { useState, useEffect } from 'react';\nimport mockUser from './mockData.js/mockUser';\nimport mockRepos from './mockData.js/mockRepos';\nimport mockFollowers from './mockData.js/mockFollowers';\nimport axios from 'axios';\n\nconst url = 'https://api.github.com';\n\nconst GithubContext = React.createContext();\n\n\nconst GithubProvider = ({ children }) => {\n    const [githubUser, setGithubUser] = useState(mockUser);\n    const [repos, setRepos] = useState(mockRepos);\n    const [followers, setFollowers] = useState(mockFollowers);\n    const [requests, setRequests] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [err, setErr] = useState({show:false, message:''})\n\n    const searchUser = async (user) => {\n        toggleErr();\n        setIsLoading(true);\n        const response = await axios(`${url}/users/${user}`).catch(err => console.log(err));\n        console.log(response);\n        if (response) {\n            setGithubUser(response.data);\n            const { login, followers_url } = response.data;\n\n            axios(`${url}/users/${login}/repos?per_page=100`).then((response) => setRepos(response.data));\n            axios(`${followers_url}?per_page=100`).then((response) => setFollowers(response.data));\n        } else {\n            toggleErr(true, \"User doesn't exist\");\n        }\n        checkRequests();\n        setIsLoading(false);\n    };\n\n\n    const checkRequests = async() =>{\n        try {\n            const response = await fetch(`${url}/rate_limit`);\n            const data = await response.json();\n            let dataRate = data.rate.remaining  \n            setRequests(dataRate);\n            if (dataRate === 0) {\n                toggleErr(true, 'Sorry you are out of limit')\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const toggleErr = (show = false,message = '') => {\n        setErr({ show, message })\n    }\n\n    useEffect(() => {\n        checkRequests();\n    }, [])\n    return (\n        <GithubContext.Provider value={{ githubUser, repos, followers, requests, err, searchUser, isLoading }}>\n            {children}\n        </GithubContext.Provider>\n    )\n}\n\nexport { GithubContext, GithubProvider };",{"ruleId":"24","severity":1,"message":"25","line":60,"column":8,"nodeType":"26","endLine":60,"endColumn":10,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkRequests'. Either include it or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [checkRequests]",{"range":"31","text":"32"},[1974,1976],"[checkRequests]"]